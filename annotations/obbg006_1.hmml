[video @nothings ~obbg title="Open Block Building Game Development #6 (1/2)" platform=youtube id=_fqT2m0TdLg annotator=@Miblo]
[2:10][Describe a bug in the :lighting]
[2:42][@captainkraft][o7]
[3:14][Run the :game and :demo the bug with the :lighting]
[4:00][Make generate_chunk() correctly set the :lighting based on the facing direction of the face]
[4:20][Run the :game and see the correct :lighting]
[5:17][Set MAX_MESH_WORKERS to 24]
[5:24][Review the current state and set the stage for the day]
[8:11][@captainkraft][This is pretty neat. How long have you been working on it?]
[8:50][Run the :game and :demo an artifact with the trees being [:"procedural generation" generated] on a jittered grid]
[9:55][Consider moving the :lighting into the :"mesh building" code]
[12:02][Stop generate_chunk() from padding everything by 4]
[14:12][Run the :game and make sure that it works]
[14:30][Switch generate_chunk() from testing the height field to testing whether the chunk is occupied]
[15:39][Run the :game and ensure that the :lighting is still correct]
[16:09][Draw everything with the sand texture in order to see the :lighting better][:"mesh building"]
[16:55][Run the :game and see that the :lighting on the trees is inconsistent]
[17:42][Allow the trees to be correctly [:"procedural generation" generated] at chunk boundaries]
[20:17][Run the :game and see parts of trees floating]
[21:01][Make generate_chunk() compute the neighbours when [:"procedural generation" generating] trees]
[21:24][Run the :game and find that the trees are now correctly placed]
[22:08][@mordervonallem][What's that loud thumping?]
[22:34][Fix the logic in the :lighting computation]
[23:39][Run the :game and find that the :lighting is now correct]
[23:51][Revert the textures back, run the :game and see it all correctly lit]
[25:15][Check how generate_chunk() is computing the biomes]
[26:25][@zaner95][Anyone in chat know processing?]
[27:11][@ixikos][It's a programming language made to quickly create visual or sensor-based projects]
[27:22][Make a keyboard function to move the camera 65536 chunks, and reduce the view_distance]
[29:43][@abnercoimbre][In real life there are interactions between the trees in a forest that can dramatically change distribution, appearance, etc. I wanna know how he'll ultimately generate this]
[30:24][Run the :game, try moving 65536 chunks and see that it looks the same]
[30:42][Try moving by 4096 chunks and consider putting the octaves out of sync with each other]
[31:54][Make compute_height() multiply the scale by octave_multiplier]
[33:03][Run the :game, try moving by 65536 chunks and find that the :lighting is now glitching]
[37:50][Add "fix depth fighting when far from origin" to the TODO list]
[38:08][@emt1337][I know Minecraft had to recenter the world on the camera to prevent float precision issues]
[40:11][Wang tiles [ref
    title="the Nothing itself nothings"
    page="Herringbone Wang Tiles"
    url=http://nothings.org/gamedev/herringbone/]][:blackboard]
[47:18][Octagonal corners][:blackboard]
[49:12][[:"procedural generation" Generating] trees at the corners][:blackboard]
[54:39][Spec out the :maths for our Wang tile-based tree [:"procedural generation" generating] algorithm]
[59:03][Understanding what size the maths is saying the corners should be][:blackboard]
[1:04:02][Introduce tree_location and tree_area_data structs][:"procedural generation"]
[1:05:54][Introduce generate_trees_for_corner()][:"procedural generation"]
[1:15:30][Introduce add_tree()][:"procedural generation"]
[1:17:25][@pseudonym73][Quick question. In American usage, is it only a "subway" if it's underground?]
[1:17:42][@pseudonym73][Right, like the Chicago L]
[1:18:16][@pseudonym73][That wasn't directed to you, [@nothings2 Sean], but thanks]
[1:18:53][@andyboy223][I wonder what it's called in Washington DC]
[1:19:26][@soysaucethekid][The T?]
[1:19:45][Introduce generate_trees_for_horizontal_edge()][:"procedural generation"]
[1:23:07][@raxqorz][I didn't know you can use sizeof with lvalue type in the statement you declare it in]
[1:26:17][Continue implementing generate_trees_for_horizontal_edge()][:"procedural generation"]
[1:27:57][@raxqorz][I thought C evaluated statement from right-to-left in declaration, which you normally do with AST? So it wouldn't know what type gc is]
[1:29:59][@pseudonym73][As of ANSI C, it always works]
[1:33:08][@abnercoimbre][@nothings2: Have you ever played DnD?]
[1:35:02][Continue implementing generate_trees_for_horizontal_edge()][:"procedural generation"]
[1:38:44][Rename generate_trees_for_horizontal_edge() to generate_trees_for_horizontal_edge_raw() and introduce a new generate_trees_for_horizontal_edge() which returns the result of the seeded _raw function]
[1:39:38][@drive137][@nothings2, I am running a HMH DnD group, and asked @starchypancakes for his character sheet for it. Then we just continued on the topic]
[1:39:43][@abnercoimbre][@Nothings2: Your other moderator is planning a DnD takeover. Your chat will roleplay in less than 24 hours]
[1:39:55][Introduce generate_trees_for_vertical_edge()][:"procedural generation"]
[1:41:23][@pseudonym73][You just show up and [@nothings2 Sean] makes you a moderator]
[1:42:03][Introduce generate_trees_for_chunk()][:"procedural generation"]
[1:47:03][Make generate_chunk() call generate_trees_for_chunk()][:"procedural generation"]
[1:49:55][Introduce collides()]
[1:52:43][@abnercoimbre][@Nothings2: In [@jon Jonathan Blow]'s compiler demo, he had created 10,000 threads in JAI and many people wondered how on Earth that could happen]
[1:53:30][Introduce swap_tree_coords()]
[1:53:52][@abnercoimbre][@nothings2: Like, how is it possible for a CPU to generate 10K threads "at once"?]
[1:56:42][Introduce add_trees() before continue to answer @abnercoimbre's :threading question]
[1:59:28][Implement add_trees()]
[/video]
