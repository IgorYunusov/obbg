[video member=nothings twitch_username=nothings2 project=obbg title="Open Block Building Game Development #22 (1/2)" platform=youtube id=lIfoM-dRIpI annotator=Miblo]
[1:29][Recap and set the stage for the day]
[5:48][:Run the game and determine to improve the feel of :movement and block placement]
[8:36][@ffsjs][@nothings2: Is there any way in which you'd allow for jumping, but not make it a required keypress for every "stairstep"?]
[10:02][@christianrohr][Could be nice to show a "ghost" block]
[10:41][Make draw_main() draw a crosshair]
[12:07][:Run the game and see that crosshair]
[12:35][@cmsimike][How have I missed the fact that ~stb offers an OpenGL lib?]
[13:38][@furroy][Do you see conveyor belts going up / down hill, or only flat?]
[14:58][@cmsimike][It's on caveview]
[16:14][Consider our options for handling conveyor belt corners][:physics :animation :rendering]
[22:58][Determine to work on the sprite problem][:art]
[23:20][@furlchoi][Animated decals? In the best case it's just changing UV coordinates based on a shader uniform][:animation]
[23:35][:Run the game and :demo the conveyor belt :animation]
[25:45][@type_null][What does the first frame-time counter measure, that sometimes goes above 16ms?][:run :"debug visualisation"]
[27:56][Try making getTimestep() busy-wait instead of sleeping, :run the game and see no visible difference]
[28:41][Produce some dummy snow :art]
[31:16][Enable render_init() to load our :art][:"asset loading"]
[38:13][:Run the game and see our new :art]
[38:22][Make render_init() correctly blend our :art with the scene]
[39:57][Introduce blinn_8x8()]
[41:24][:Run the game and see that the edges are clean]
[42:17][Introduce render_sprites()][:rendering]
[47:38][Introduce vec_add() and vec_sub()]
[49:38][@furlchoi][You can't synchronize by just sending actions unless all the client sims are in lockstep, because one client will process an action at a different time than another, and that will cause a desync][:networking]
[51:02][Initialise the sprites to some dummy stuff][:"asset loading"]
[54:09][:Run the game, see what happens and investigate why they're being rendered incorrectly][:rendering]
[56:41][Make render_init() and render_sprites() correctly setup the textures][:rendering]
[59:33][:Run the game and see our :art]
[59:56][Enable render_sprites() to make the sprites face the camera][:rendering]
[1:03:26][:Run the game and view our :art]
[1:03:52][Introduce vec_add_scale() and vec_sub_scale() in order to draw them at various sizes]
[1:05:05][:Run the game to view our variably sized :art, and commit "sprite :rendering"]
[1:06:38][Consult the TODO list]
[1:08:43][Make render_sprites() not sort the sprites correctly][:rendering :sorting]
[1:09:57][:Run the game and find that the :sorting is indeed now broken]
[1:10:24][Make load_bitmap_to_texture_array() tell the mipmaps that they are premultiplied alpha][:rendering]
[1:11:01][:Run the game to see that there are no weird :rendering artifacts, and commit "fix sprite alpha mipmaps & :rendering"]
[1:12:26][Consult the TODO list, and determine to improve the feel of block placement]
[1:12:48][Reverse the buttons in mouse_down() and assign the "R" key to rotate][:"input handling"]
[1:14:33][@soysaucethekid][Is that part of a :"particle effects" system?]
[1:15:24][Introduce rotate_block(), get_block() and get_block_index()]
[1:20:42][:Run the game and see that the mipmap generation isn't right after all][:rendering]
[1:21:57][Make change_block() force the updates][:"mesh building"]
[1:23:01][:Run the game and try rotating blocks]
[1:26:39][Create logistics.c and introduce logistics_update_block()][:simulation]
[1:29:25][A few words on the notion of totally parallel world representations for the logistics :simulation and the block world and :physics]
[1:30:39][@kirenga][[ref
    site=SeaOfMemes
    page="Blog Entries"
    url=http://www.sea-of-memes.com/summary/blog_parts.html]]
[1:31:53][An anecdote on multiple independent worlds]
[1:34:23][@kirenga][@Nothings2 Sorry to bother you, could you maybe increase minimum microphone threshold? The background noise is distracting]
[1:36:18][Introduce structures for the logistics :simulation]
[1:40:57][@erafo][#define LOGI_CHUNK_SIZE_Y_LOG2 shouldn't be GEN_CHUNK_SIZE_Y_LOG2?]
[1:41:27][Calculate how big of a logistics :simulation we could reasonably do around the player]
[1:44:11][Introduce logistics_get_chunk() and logistics_get_chunk_alloc()][:simulation]
[1:45:53][@josianmarriott][I really like [@nothings Sean]'s way of keeping all public function / data definitions together in single header files. Now I have single header files for my entire game, it makes it so much easier to keep track of what you have and how everything ties together]
[1:46:38][@klemensbaum][What kind of keyboard are you using?]
[1:46:45][@hopsain][Are you on windows 98?]
[1:49:46][Implement logistics_update_block()]
[1:52:43][Introduce logistics_free_slice() and logistics_create_slice()]
[1:55:00][:Run the game to see if it is updating the logistics :simulation, and commit "initial logistics sim"]
[1:57:58][Consider how to represent the sprites in order for the logistics :simulation to use]
[2:00:22][@kirenga][Wait, the sprites are part of the :physics :simulation?]
[2:01:51][@kirenga][Oh, logistics is just the conveyor belts? I thought it was :physics :simulation]
[2:03:14][Introduce some belt structs][:simulation]
[2:13:47][Make logistics_update_block() keep track of belt runs][:simulation]
[2:18:15][Introduce create_belt()][:simulation]
[2:25:30][@emanresuon][I don't get the purpose of the for loop in create_belt(). Like, isn't i == stb_arr(c->br) always going to be true after that loop?]
[2:29:09][@furroy][Did you mean to push that on the array twice now?]
[2:31:08][Introduce merge_run()][:simulation]
[2:34:52][Continue implementing merge_run()][:simulation]
[2:38:02][@josianmarriott][Sorry, I came in late: are runs going to span across chunks?][:simulation]
[2:39:06][Finish implementing merge_run()][:simulation]
[2:41:18][Introduce split_belt()][:simulation]
[2:45:46][@furroy][Won't items on b need some sort of update to their offset once added to a?][:simulation]
[2:47:25][@josianmarriott][Rather than store "runs", wouldn't it be simpler to just store connectivity in bitmasks per block? Worried about :memory usage?][:simulation]
[2:48:07][Finish implementing split_belt()][:simulation]
[2:56:14][Introduce split_items()][:simulation]
[2:58:41][Introduce move_items()][:simulation]
[3:00:48][Introduce destroy_belt_raw() and destroy_belt()][:simulation]
[3:03:46][:Run the game and see if it crashes]
[3:04:04][Introduce logistics_debug_render() and logistics_init()][:"debug visualisation" :simulation]
[3:16:15][@josianmarriott][x and y are going to accumulate face_orig at the moment][:simulation]
[3:18:23][:Run the game and check out the merging]
[3:20:10][@soysaucethekid][Did he get rotation in?]
[3:20:27][Make split_belt() assert that the position is correct, and correctly compute the position and offsets][:simulation]
[3:28:20][:Run the game and see how that affects the splitting and merging][:simulation]
[3:30:24][Try to rotate and hit an assertion in split_belt() because we compute the pos wrong][:simulation]
[3:30:55][Make split_belt() compute the pos differently][:simulation]
[3:31:11][:Run the game, rotate an isolated block, hit an assertion in split_belt() and investigate why][:simulation]
[3:32:50][Make create_belt() explicitly set the direction, and enable logistics_debug_render() to draw the first edge in a different colour][:simulation :"debug visualisation"]
[3:35:57][@miblo][Oh my gosh, the stream's still going!]
[3:36:08][:Run the game and see if rotation is now tracked correctly]
[3:37:55][Put debug_render on a toggle and commit "track runs of conveyor belts"][:"debug visualisation"]
[3:39:55][:Run the game just so there's something to look at]
[3:42:15][Return and cycle the stream]
[/video]
