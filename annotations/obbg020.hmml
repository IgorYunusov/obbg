[video member=nothings twitch_username=nothings2 project=obbg title="Open Block Building Game Development #20" platform=youtube id=UVAaCaXLuT0 annotator=Miblo]
[3:29][Recap and consider moving on to something other than :networking]
[5:08][Plan to make a sort of Factorio in 3D][:"game design"]
[15:17][@furroy][Gonna need a player inventory and equip tools?][":game design"]
[17:44][@furroy][Perhaps end-game you have to build a rocket and then travel to a new world / map]
[19:16][@pseudonym73][Something more like "build a colony", perhaps]
[23:28][@triplefox][A game just about welding multi-block objects could be interesting]
[23:32][@nothings2][@triplefox Go play Infinifactory, that's the whole game]
[28:35][@furroy][You could have a spinning arm that sweeps a radius and keep extending the arm to mine more and more but takes exponentially more power]
[30:32][Note how we don't currently have much interesting stuff to network][:networking]
[31:28][@furroy][So if, say, a belt has 1000 units of something piled up on the end of it, how does the player know?]
[32:24][@furroy][If it's multiplayer, do you need any concept of block ownership?]
[33:05][@triplefox][If the game pieces are very fine-grained and powerful then you tend to get more of a chaotic / naturalistic game scenario like Game of Life. That can be really good but harder to plan design for vs. having chunkier, limited elements and then gradually adding power]
[33:15][@nothings2][I don't know what it is in practice, but I think of Factorio just having a huge scale from fine-grained and nearly-dysfunctional pieces to chunkier, fewer, powerful pieces]
[33:58][Determine to implement player block placement first, and prioritise the rest of the TODO list]
[36:27][Consider how to tackle player block placement using raycasting][:collision :physics :"mesh building"]
[40:47][Introduce raycast()][:collision :physics :"mesh building"]
[48:48][@quartertron][Is your monitor placement so high on purpose or a natural - uh - progression?]
[50:33][Make raycast() interpolate 1024 positions along the ray, testing the block types and determining which face of the block it hit]
[57:28][@furroy][Wouldn't you need to divide by 1024.0? My C might be rusty]
[59:25][@vognsen][@Nothings2 If you do the standard voxel trace (track tx, ty, tz for "next time you cross a coordinate") you get the face directly from the latest coordinate that was incremented]
[1:00:23][Make draw_main() call raycast() and draw a box if the ray hit something][:"mesh building"]
[1:13:27][Provide the ability to switch the program_mode]
[1:18:27][:Run the game and see if MODE_single_player is working]
[1:19:44][Make world_init() conditionally set the player_id]
[1:20:17][:Run the game and find that the :"input handling" is not functional]
[1:20:48][Make process_tick() do :"input handling" for MODE_single_player]
[1:24:17][:Run the game, find that single player is working and commit "fix single player; non-functional disabled wireframe of raycast block"]
[1:24:53][Re-enable raycasting, crash in raycast() and investigate why]
[1:26:18][Make draw_main() offset the positions]
[1:26:37][:Run the game and find that it's kind of working, but that there may be a bug in the raycasting]
[1:28:33][:Run the game, get it in a known-bad position, break into raycast() and inspect the position values]
[1:31:20][Correct the order of the vertices in raycast()]
[1:31:54][:Run the game and find that it just works now]
[1:32:04][Make draw_main() use the face direction to offset the box]
[1:34:20][:Run the game, see our selection marker and consider scaling back the voxels]
[1:35:01][Increase the COLLIDE_BLOB_ values from 12 to 20 and set the objspace_to_worldspace() distance to 9][:collision]
[1:36:27][:Run the game, see how that feels, consider doing two gathers per raycast and commit "raycast to find place to place blocks"]
[1:37:28][Consider how to implement placing blocks][:"mesh building"]
[1:38:36][Provide the ability to mark a mesh_chunk as dirty in order to rebuild it when the player places a block][:"mesh building"]
[1:46:08][Introduce force_update_for_block_raw() and force_update_for_block()][:"mesh building"]
[1:52:28][Introduce BlockChange struct and change_block() in order to operate on the edits][:"mesh building"]
[1:55:50][Make generate_chunk() loop over the changes and update accordingly][:"mesh building"]
[2:01:20][Start to provide the ability in process_event() to click and place a block][:"input handling"]
[2:02:09][@furroy][Did you ever clear out the chunk dirty flag?]
[2:03:54][Make request_mesh_generation() consider the mesh if marked as dirty][:"mesh building"]
[2:05:38][Add "make sure we rebuild if we change a block while we're already rebuilding" to the TODO list]
[2:07:27][Finish making process_event() handle the mouse button, and make draw_main() destroy and create a mesh][:"input handling" :"mesh building"]
[2:09:37][Introduce mouse_down() and mouse_up() in order to actually do the change_block() call][:"mesh building" :"input handling"]
[2:11:03][:Run the game, find that it does nothing, step through the routine and investigate what's (not) happening]
[2:15:52][Try switching to the single-threaded path][:threading]
[2:16:33][Continue investigating what's (not) happening in the multi-threaded path]
[2:21:06][Document swap_requested_meshes()][:"mesh building"]
[2:29:04][Introduce invalidate_gen_chunk_cache() and make request_mesh_generation() operate on dirty meshes][:"mesh building"]
[2:36:14][@themindoverall][I think you put consider_mesh\[n\] where it should be consider_mesh\[i\] in that last edit]
[2:38:56][Make swap_requested_meshes(), get_chunk_status_alloc() and worker_manager() handle rebuild_chunks][:"mesh building"]
[2:42:15][:Run the game, find that everything is still building correctly but that nothing happens when you click, and investigate why]
[2:43:40][Make get_chunk_status_alloc() handle the CHUNK_STATUS_invalid case][:"mesh building"]
[2:45:21][:Run the game, click and hit the assertion in get_gen_chunk_cache_for_coord()]
[2:46:09][Make invalidate_get_chunk_cache() set the chunk_x and _y]
[2:47:07][:Run the game, click, see nothing happen and investigate why]
[2:53:37][Make mouse_down() offset the blocks in the calls to change_block()][:"mesh building" :"input handling"]
[2:54:52][:Run the game and see nothing changing]
[2:56:19][Make generate_chunk() call build_column() for the edits][:"mesh building"]
[2:57:10][:Run the game and see that it still does nothing]
[2:59:44][Create a dummy edit]
[3:01:44][:Run the game and see our dummy spike but not at the expected coordinates]
[3:03:11][Determine that the edits are being offset by a chunk and not rebuilding properly][:"mesh building" :run]
[3:07:35][Make draw_main() draw a debug line at the origin][:"debug visualisation"]
[3:08:47][:Run the game and look for that line]
[3:10:11][Make worker_handler() offset the requested meshes][:"mesh building"]
[3:10:54][:Run the game and find that the placing of blocks now works, but that the physics needs to be updated][:"mesh building"]
[3:13:59][Commit "get basic block building working; hacked tree trunk displayed; not updating physics cache do that"]
[3:14:07][That's it]
[/video]
