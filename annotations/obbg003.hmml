[video @nothings ~obbg title="Open Block Building Game Development #3" platform=youtube id=_FwC0Ihw0_V0 annotator=@Miblo]
[6:09][Recap and set the stage for the day]
[8:55][Deduplicate the data taken by the :"mesh building" functions by adding them to the threadsafe_queue structure][:threading]
[13:15][Introduce add_task]
[14:52][Introduce get_from_queue]
[17:33][Consider using the "wake up" function and prioritize :"mesh building" over :"procedural generation"]
[20:12][Delete add_gen and add_built_mesh]
[25:28][Call waiter_wake when a job finishes]
[26:07][Make worker_manager prioritize :"mesh building" over :"procedural generation"]
[29:37][@d7samurai][I find watching @nothings2's streams very soothing]
[30:16][Research how to order multiple work queues][:threading]
[37:21][Make a pending_meshes queue and check both that and the built_meshes queue for more work]
[39:04][@rygorous][What is [@nothings2 Sean] trying to do right now?]
[40:47][@rygorous][@nothings2: Okay, that one's reasonably easy - reverse the dependencies]
[41:43][@rygorous][@nothings2: Each chunk job gets a pointer to the mesh job to be pushed when the number of chunks it depends on becomes 0]
[42:50][@boolean0][Q: Why did you choose polygons over raycasting an octree?]
[44:33][Reference count chunks]
[45:42][Introduce release_gen_chunk]
[50:38][Introduce get_from_queue_nonblocking]
[53:30][Introduce get_next_built_mesh to enable the renderer to request meshes]
[59:16][Run the :game on the old single-threaded path]
[59:46][#if 0 the old behaviour]
[1:02:16][Write out in detail the plan for :rendering the meshes]
[1:08:08][@pzurita][@nothings2 Depending on the size of the job you may want to allow abort of the mesh chunk processing]
[1:10:50][@d7samurai][So what exactly is a "chunk" here?]
[1:12:12][@rygorous][@nothings2 Or just have an index of which array is current and flip that]
[1:16:32][Save this for another night]
[1:19:06][Uncomment out the new code, run the :game and push it to the repo]
[/video]

