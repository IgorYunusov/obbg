[video @nothings ~obbg title="Open Block Building Game Development #8 (2/2)" platform=youtube id=yU8tkxt-YVE annotator=@Miblo]
[2:08][@sethwklein][@Nothings2, just reboot if you need to. We'll still be here if you let us know in advance]
[2:27][Run the :game and see that it's working, until hitting an out-of-memory bug][:memory]
[3:21][@sethwklein][@Nothings2, switch scenes, please!]
[3:30][Walk through the :game and find that it's stacking multiple things on top of each other]
[3:50][Set MESH_CHUNK_SIZE_X_LOG2 and _Y_LOG2 back to 6]
[4:39][Run the :game to see that it's all alright again and not running out of :memory]
[7:34][Set VIEW_DISTANCE_LOG2 back to 11 and run the :game again]
[8:21][Make setup_uniforms() correctly set the fog when the view_distance is short, run the :game and find that it is not jittering as it was before]
[9:43][Do a manual :memory leak check]
[15:17][Free the built_mesh data after calling set_mesh_chunk_for_coord(), hit a breakpoint and investigate where this mc is coming from][:memory]
[17:47][Output the mc upon trying to free it][:memory]
[18:49][Make set_mesh_chunk_for_coord() not free the mc][:memory]
[19:35][Run the :game and find that we no longer run out of :memory]
[24:14][Consider changing the :font of the profiler]
[25:53][Commit "fix memory leak of mesh chunk build buffers" and consult the TODO list]
[27:13][@abnercoimbre][@nothings2: I never asked where these colors or textures come from?]
[28:06][Consider doing :collision detection and :physics representation]
[36:12][@nexuapex][What if you did RLE for only pure solid / empty?]
[36:22][@main_gi][What is RLE?]
[41:12][Implement :physics representation, starting by enumerating physics types and introducing phys_chunk_run and phys_chunk]
[46:57][Introduce build_phys_chunk()][:physics]
[47:55][Introduce arena struct and area_alloc()][:memory]
[52:29][Introduce arena_free_all()][:memory]
[53:37][Implement build_phys_chunk()][:physics]
[56:26][@abnercoimbre][Hahahah, @nothings2]
[58:18][Introduce arena_release()][:memory]
[1:00:24][Introduce build_phys_column()][:physics]
[1:08:11][Make free_mesh_chunk() free all allocated mesh chunks][:memory]
[1:09:04][Run the :game and see that it crashes]
[1:09:20][Make arena_alloc() check if ac is NULL, and inline pc in the mesh_chunk struct]
[1:10:45][Run the :game and run out of :memory]
[1:12:00][Increase the size of the mesh in build_phys_chunk(), run the :game and see how that affects it]
[1:12:24][@dghelneshi][Damn, I want more than 3 slots for programs to try stuff out]
[1:13:26][Make arena_alloc() conditionally set cur to cur, run the :game and see that it's fixed][:memory]
[1:14:14][@d7samurai][@Nothings2, @Toaoo here apparently has a 3 node 1 stack solution (dynamic) that only uses 411 cycles]
[1:14:38][@toaoo][Yes, doesn't cheat the inputs]
[1:15:28][Deconstruct the thought process behind guessing where that bug was]
[1:18:07][Make arena_alloc() use stb_max(), run the :game and see if it runs out of :memory]
[1:18:36][@d7samurai][@Nothings2 Would it be possible to turn up the volume a little bit at your end? It's so low for me that I have to turn up the main winows volume so high that I get a heart attack every time I get a notification]
[1:19:36][Recap today's work]
[1:20:37][Break into arena_release() and inspect the size][:memory]
[1:21:17][Stop the stream]
[/video]
