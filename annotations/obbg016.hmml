[video member=nothings twitch_username=nothings2 project=obbg title="Open Block Building Game Development #16" platform=youtube id=_aq9m0RRbhM annotator=Miblo]
[1:01][Recap and set the stage for the day [ref
    site="Unreal Developer Network"
    page="Unreal Networking Architecture"
    url=https://udn.epicgames.com/Three/NetworkingOverview.html]][:networking]
[16:16][Clean up port handling][:networking]
[23:13][Update the overview and commit "--port always specifies server port"]
[25:05][Embark on the :networking with client-side prediction]
[25:57][Consider our limits and get a sense of how much data we're sending out for each entity][:networking]
[41:29][Introduce versioned_object_system and player_input_history structs][:networking]
[55:16][Introduce process_player_input()][:networking]
[1:10:36][Split server_net_tick() into _pre_physics() and _post_physics() parts][:networking]
[1:13:54][Make client_net_tick() only send packets every odd tick][:networking]
[1:17:09][Introduce net_objid and object_state structs][:networking]
[1:19:53][Make server_net_tick_post_physics() call build_packet_for_player() and introduce that function][:networking]
[1:25:58][Introduce write_to_packet()][:networking]
[1:30:29][Note the two ways to do the client-side prediction fix-up][:networking]
[1:31:34][Make build_packet_for_player() send the client's location, with a view to making the client reset if it picked the wrong location][:networking]
[1:36:16][@PLACEHOLDER][There is a .cpp file in there]
[1:40:07][On knowing how to get to an address][:experience]
[1:41:51][Update the immediate TODO list]
[1:44:17][Pseudo-code the naive version of what client_net_tick() must do][:networking]
[1:45:41][Introduce client_build_input()][:networking]
[1:49:07][Make client_net_tick() receive and parse the packets from the server][:networking]
[1:58:56][Lament the fact that sizeof is unsigned][:language]
[2:04:33][@PLACEHOLDER][Will this turn into a full game?]
[2:05:35][@PLACEHOLDER][Would there ever be a reason to have sizeof be signed?][:language :demo :rant]
[2:09:20][@PLACEHOLDER][Haven't seen a goto statement in a long time][:language]
[2:12:12][@slashlife][sizeof should be unsigned because it can never return negative values][:language]
[2:13:08][Try and :run the game and see what happens]
[2:13:47][Make server_net_tick_pre_physics() loop over the players and update p_input][:networking]
[2:16:37][@PLACEHOLDER][Also, in the backwards counting for-loop, if you assign a size_t to an int, it would be cast implicitly][:language]
[2:19:03][@PLACEHOLDER][Isn't that MS?]
[2:20:29][Compile and document what server_net_tick_pre_physics() is doing][:networking]
[2:21:27][On defining your own types][:language]
[2:23:24][:Run the game, break into client_net_tick() and see if it's getting a player_id][:networking]
[2:24:41][@PLACEHOLDER][Why did they introduce the _t thing?]
[2:26:51][Make client_net_tick() send one packet, just to get it going, :run the game and find that our input is not being processed][:networking]
[2:28:20][Investigate why the input is not being processed][:networking]
[2:33:13][Make process_player_input() test the server_timestamp in both directions][:networking]
[2:33:50][:Run the game, break into process_player_input and find that the client is now too far into the future]
[2:34:56][@PLACEHOLDER][What are you making?]
[2:35:04][Make process_player_input() synchronise with the server_timestamp][:networking]
[2:39:01][@PLACEHOLDER][You seem to have zero problems in programming]
[2:40:53][Make process_player_input() compute the client_input_offset based on the MAX_CLIENT_INPUT_HISTORY][:networking]
[2:41:39][:Run the game and find that we are now successfully sending input][:networking]
[2:41:56][Make server_net_tick_pre_physics() process the player's angle][:networking]
[2:42:57][:Run the game and see that we are spontaneously jumping]
[2:43:59][Hit the assert in collision_test_box() and investigate why]
[2:48:06][Make physics_move_walkable() test that z-1 >= mi_z]
[2:48:40][:Run the game and assess our status]
[2:48:53][@PLACEHOLDER][What's going on in terms of simulating net badness?]
[2:49:40][Again hit that assert in collision_test_box() and, separately, surmise that something with the timestamping is getting screwed up]
[2:52:00][Stop there]
[/video]
