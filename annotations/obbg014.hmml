[video member=nothings twitch_username=nothings2 project=obbg title="Open Block Building Game Development #14" platform=youtube id=QOB2qvR8-vM annotator=Miblo]
[1:36][Hello and welcome]
[2:51][@cmsimike][Is the voice low for anyone else?]
[4:26][Update the overview and set the stage for the day]
[6:10][Bring us up to speed with some off-stream work][:networking]
[7:36][Switch net_send() to using the correct code and :run the game]
[8:08][Consider converting away from SDL_net as per Ryan C. Gordon's recommendation]
[9:21][@popcorn0x90][It's 7-11 free slurpies]
[9:26][Swap CLIENT_PORT and SERVER_PORT in net_send()][:networking]
[9:58][:Run the game, don't see anything, but determine to run two copies of the game]
[11:09][Make net_init() wait for 5 seconds, to give us time to start the other instance]
[11:19][:Run two instances of the game and see the test string successfully passed between them]
[11:52][@popcorn0x90][Oh I don't remember having to swap bytes for the ports][:networking]
[12:27][Investigate why we're not getting the correct textures][:"texture loading"]
[13:20][:Run the server from the correct directory]
[13:35][Make init_mesh_build_threads() reduce the amount of :memory the game will use]
[15:07][@malmrose][Me]
[16:04][:Run the game and see the lower view distance]
[16:07][@gasto5][What type of :networking will be supported?]
[16:40][Move the SDLNet_Init() test into net_init()][:networking]
[18:33][Commit "fix bug in using SDL_net"]
[19:37][Make net_send() and net_receive() public and clean up some unnecessary stuff][:networking]
[20:35][Enable process_tick() to make the server receive and the client to send the client_player_input][:networking]
[24:43][@gasto5][How come SDL compiles using VC++ 6?]
[24:52][@x13pixels][He answered that in his FAQ]
[25:40][Make SDL_main() set smaller screen dimensions for the server]
[25:58][:Run the server and client and find that the [:"input handling" input] is doing nothing][:networking]
[26:40][Move the client_view_physics() call out of process_tick_raw() into process_tick()][:networking]
[27:18][Try and :run without a server, then after turning on the server][:networking]
[27:51][Enable process_tick() to make the client set object o][:networking]
[29:49][:Run the client and server, and successfully move]
[30:56][Investigate why the world stopped being built around us]
[33:33][Investigate why the controls are not working as expected][:"input handling" :networking]
[33:57][Add ang to the player_controls struct and make process_tick() send that angle]
[35:19][:Run the game and crash]
[35:24][On building SDL2 from source in VC6]
[35:49][Swap the order of the server and client, :run the game and try and get it to crash again]
[37:16][Make physics_set_player_coord() check that rm != NULL, and consider making process_tick() call physics_set_player_coord()]
[39:43][:Run the game, break into physics_set_player_coord() and inspect the values]
[42:00][@popcorn0x90][He needs the voice thing]
[42:07][@soysaucethekid][Is the server telling the client how to generate the map now, or is it static at the moment?][:networking]
[42:30][Compare the coordinates of the client and server, and then fly to a border][:networking]
[45:23][Break into request_mesh_generation(), see that it is issuing requests, and then step through worker_manager() to see why it's not satisfying those requests]
[51:11][@uhee][The :camera movement smoothing is pretty good. What sort of smoothing is that? (I liked it before the lag bug, so it's not that)]
[52:19][Dinner time]
[54:32][Consider the possibility of having exposed a bug by changing the size of the world]
[56:14][Let it use the maximum possible num_mesh_workers][:threading]
[57:27][:Run our instances of the game and see if that :"mesh building" bug exhibits]
[58:55][@d7samurai][If someone not familiar with the stream logged in right now]
[59:38][Establish that it still happens with all the mesh workers, and determine to turn off the client-server entirely][:networking]
[1:00:43][Make process_tick() work single-player]
[1:01:24][:Run the game and then see if the bug exhibits]
[1:01:40][Reach the edge of the world, then try increasing the VIEW_DIST_LOG2 to 11]
[1:02:27][:Run the game and again try and reach the edge of the world]
[1:03:18][Try setting the VIEW_DIST_LOG2 to 10, then :run again]
[1:03:35][@popcorn0x90][Turn off the server][:networking]
[1:04:12][Increase the view_distance to 600, then :run and reach the edge of the world again]
[1:05:57][Investigate the possibility of having used the wrong variable name somewhere]
[1:16:36][Break into swap_requested_meshes(), find that we're still getting the :physics requests and investigate why]
[1:20:30][Turn on the :physics display, :run the game and find that those numbers don't seem correct]
[1:21:11][Set VIEW_DIST_LOG2 to 11, :run and find that the :physics numbers are now correct]
[1:21:57][Continue investigating what could be causing the :physics to be incorrect]
[1:25:17][Crash in generate_chunk() because we've run out of :memory]
[1:26:26][Break into swap_requested_meshes(), find that they think they are being processed when they are actually not]
[1:28:45][Break in build_phys_chunk(), :run and count how many times it gets called, then find that we keep rebuilding the same phys_chunk]
[1:30:58][:Rant on :threading][:experience]
[1:34:40][Why multi-threaded code is harder than single-threaded code][:threading :experience]
[1:39:26][@malmrose][PCs started at 4.77 MHz, we almost made it to 4.77 GHz]
[1:40:12][@drjeats][@Nothings2 do you find there are any mostly-easy-enough-to-thread scenarios, like spinning off a worker to read and parse a file?][:threading]
[1:41:18][Horror story on investigating an asynchronous read-related bug for Flight Unlimited 2][:experience :threading :rant]
[1:49:17][Consider wrapping it up]
[1:49:47][Continue to investigate this bug]
[1:53:36][Step through physics_set_player_coord() and inspect rx and ry][:physics]
[1:54:31][Step through physics_process_mesh_chunk(), discover that someone is scaling by a factor of 2 and investigate who][:physics]
[1:55:25][worker_manager() and mesh_worker_handler() compute chunk_x and _y from MESH_CHUNK_SIZE_X_LOG2 and _X_LOG2]
[1:56:25][@sciencetobedone][OMG, it's the legendary stb. Hello, dark master of mysteries]
[1:56:30][:Run the game and find that the bug is indeed fixed]
[1:56:39][@uhee][Haha, Mr @nothings2 was right back when we were guessing]
[1:57:01][Try setting VIEW_DIST_LOG2 to 9 and view_distance to 300, :run the game and see if we hit that bug we just fixed]
[1:58:15][Switch back to :networking mode, :run the server and client and :demo the lag between them]
[2:02:10][Enable process_tick() to read a variable number of packets per frame][:networking]
[2:04:12][:Run the game and find that the client and server are now in sync][:networking]
[2:05:25][Commit "primitive :networking working"]
[2:05:47][Consider what is required to allow multiple players to join][:networking]
[2:08:52][@negatratoron][Is that Sprechers root beer?]
[2:09:33][Introduce server_net_tick()][:networking]
[2:14:07][Introduce find_connection()][:networking]
[2:15:02][Introduce create_connection()][:networking]
[2:17:57][@popcorn0x90][Why if port == 0?][:networking]
[2:18:19][Enable server_net_tick() to send the input][:networking]
[2:20:20][Introduce client_net_tick()][:networking]
[2:23:21][@popcorn0x90][Oh nice, you are sending the raw object rather than text information][:networking]
[2:23:39][Clean up dead code in process_tick() and make it instead call server_net_tick() and client_net_tick()]
[2:24:54][Compile and clean up compile errors]
[2:29:15][Stop world_init() from calling allocate_player() and instead let create_connection() call it]
[2:30:24][:Run the game and see what happens]
[2:31:09][:Run the server and client and determine that they are not successfully communicating][:networking]
[2:33:19][Make net_send() correctly set the address.host, and server_net_tick() send eight players' worth of data][:networking]
[2:34:32][Make process_tick_raw() hook up the :physics][:networking]
[2:35:18][:Run the game and find that we can now move]
[2:35:38][Enable net_init() and SDL_main() to make the clients run with different port numbers][:networking]
[2:37:15][@cubercaleb][obbg\stb\stb.h(7362) : error C2466 : cannot allocate an array of constant size 0]
[2:37:38][:Run a client and find that the :movement is not being passed through correctly][:networking]
[2:38:28][Make client_net_tick() set the client_play_input.ang, and server_net_tick() to receive it][:networking]
[2:39:13][:Run the game, verify that the :movement is now correct, and then start a second client][:networking]
[2:40:18][Make render_objects() draw both clients in the world][:networking]
[2:42:47][:Run the game with two clients, and fly around with two players][:networking]
[2:44:00][Now that :networking is working, stop working for the weekend]
[/video]
