obbg:
  open block building game

  exercise all interesting
    features of voxel stuff:
  - mesh generation/rendering
  - procedural gen
  - user create/destroy
  - save/load to disk
  - networking

Todo:
   -  merge linux pull request
   -  write a real performance monitor

Done in today's stream (33)
   -  write a real memory monitor

Previous stream (32)
   -  write tool to parse Miblo's annotations, generate youtube-formatted info
   -  fix bug that causes crashes occasionally

Previous stream (31)
   - fix placing blocks updating in renderer, only ever worked in MINIMIZE_MEMORY
   - ore drills only work if they're on marble 'ore'

Previous stream (30)
   - start tracking ore deposits for logistics

Previous stream (29)
  - articulated arm pickers

Previous stream (28)
  - non-articulated pickers

Previous stream (27)
  - 90-degree turn conveyors

Previous stream (26.1,26.2,26.3)
  - pickers feed to machines
  - machines don't feed from belts
  - initial implementation of pickers
  - fix conveyor animation glitch 
  - simple test machines

Previous stream:
  - initial ramp simulation

Previous stream:
  - ramp conveyors texture animation

Previous stream:
  - clean up rules for moving between belt runs
  - topologically sort belts so movement is "perfect"

Previous stream:
  - moving objects on conveyor belts

Previous stream:
  - animated conveyor belt textures

Previous stream:
  - re-enable single player mode
  - primitive place & destroy blocks system

Previous stream:
  - fix sync of client input buffering

Previous stream:
  - print network info on client & server
  - fix bug
  - initial client-side prediction

Previous stream:
  - fix jumping up bug
  - fix tilting up moves backwards

Previous stream:
  - forgot to document it

Previous stream:
  - minor clean-up of port# handling
  - add more client/server design docs

Previous stream:
  - send multiple client inputs in one packet
  - let OS pick the client's port
  - much research into how to do client/server right
  - pseudo-code design of networking

Previous stream:
  - primitive networking

Previous stream:
  - primitive networking

Previous stream:
  - debugged potential memory leak
     - really just using too much memory for 32-bit
  - start hooking up SDL_net  

Previous stream:
  - refactor physics cache
  - create an object "system"

Previous stream:
  - refactor mesh generation so single-player client & server can share the threaded workers

Previous stream:
  - fixed collision gather bug
  - 3rd person camera

Previous stream:
  - collision geometry working, but buggy:
    - incorrect solid block @ -65, -25, 74
  - simple walking model with collision probes

Previous stream:
   (maybe same stream as below)
     start gathering collision data

Previous stream:
   -  Tree layout, no grid artifacts
   -  Tree tops

Previous stream:
   -  fix lighting bug
   -  change lighting to not be height-field based
   -  partial work on new tree layout

Previous stream:
   -  fog dist from view dist
   -  improve height-field
   -  other terrain features

Previous stream:
   -  threaded procgen&meshing

Previous stream:
   -  optimize rendering
      -  frustum culling
      -  limit # chunks rebuilt per frame
   -  use more textures
   -  vertex ambient occlusion
   -  launch one light source at a time
   -  optimize mesh building
   -  optimize terrain generation

Previous stream:
  - cache procedural genation chunks
  - build & cache meshes
  - render them poorly

Done before stream:
  Pixar's 128 1024x1024
  Loaded with Rich Geldreich's
     crunch library (DXT)
  Main loop/top-level cut-n-paste
     from caveview (Minecraft)

